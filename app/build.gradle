plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.google.gms.google.services)
}

def localProperties = new Properties();
def localPropertiesFile = rootProject.file("local.properties");
if(localPropertiesFile.exists()){
    localProperties.load(new FileInputStream(localPropertiesFile))
}
def mapsApiKey = localProperties.getProperty("MAPS_API_KEY") ?: ""

android {
    namespace 'com.example.wildlifetracker'
    compileSdk 35

    aaptOptions {
        noCompress "tflite"
    }

    defaultConfig {
        applicationId "com.example.wildlifetracker"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                MAPS_API_KEY: mapsApiKey
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.firebase.auth
    implementation libs.credentials
    implementation libs.credentials.play.services.auth
    implementation libs.googleid
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    implementation libs.material.v1110

    // ML Kit
    implementation libs.image.labeling
    implementation libs.image.labeling.custom

    // CameraX
    implementation libs.camera.camera2
    implementation libs.camera.lifecycle
    implementation libs.camera.view

    // Google Maps
    implementation libs.play.services.maps
    implementation libs.play.services.location

    // Image Loading
    implementation libs.glide
    annotationProcessor libs.compiler

    // Room (Local DB)
    implementation libs.room.runtime
    annotationProcessor libs.room.compiler

    // Lifecycle components
    implementation libs.lifecycle.extensions

    // Permissions handling
    implementation libs.dexter

    implementation libs.material
    implementation libs.appcompat
    implementation libs.constraintlayout
}